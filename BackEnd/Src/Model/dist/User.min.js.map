{"version":3,"sources":["User.js"],"names":["_mongoose","_interopRequireDefault","require","_bcrypt","userSchema","mongoose","Schema","username","type","String","age","gender","enum","email","default","required","password","ref","Types","ObjectId","pre","next","user","err","salt","regeneratorRuntime","async","_context","prev","this","isModified","Error","abrupt","awrap","bcrypt","genSalt","sent","hash","t0","stop","User","model"],"mappings":"2FAAA,IAAAA,UAAAC,uBAAAC,QAAA,aACAC,QAAAF,uBAAAC,QAAA,mFACA,IAAME,WAAa,IAAIC,UAAAA,QAASC,OAAO,CACrCC,SAAU,CACRC,KAAMC,QAERC,IAAK,CANPF,KAAAC,QACAE,OAAA,CASIH,KAAMC,OACNG,KAAM,CAAC,OAAQ,SAAU,UAT7BC,MAAMT,CACJG,KAAQE,OACND,UAAMC,GAERC,SAAK,CACHF,KAAMC,QAERE,OAAQ,CACNH,KAAMC,OACNK,QAAO,mCAETD,IAAK,CACHL,KAAMC,OACNM,QAAQ,IAEVC,UAAU,CAAA,CACRR,KAAMC,UAAAA,QAAAA,OAAAA,MAAAA,SAhB6BQ,IAAA,SAmBnCT,UAAMC,CAAAA,CACND,KAAAH,UAAAA,QAASC,OAAAY,MAAAC,SApB0BF,IAAA,UAuBnCT,CAAAA,YADG,IAEHJ,WAAAgB,IAAS,OAAA,SAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAN,MAAA,KAAA,EAAA,KAxB0BC,EAAAO,MA0B1BC,WAAC,YAFD,CAAAH,EAAAN,KAAA,GAAA,MAAA,IAGHhB,EAAAA,UAAAA,EAASC,SAAaa,OADlB,EAFD,OAIJI,EAAA,IAAAQ,MAAA,oCAJIJ,EAAAK,OAAA,SAxB0BX,EAAAE,IAwB1BI,EAAAN,KAAA,EAAA,MAAA,KAAA,EAAA,OAAAM,EAAAC,KAAA,EAAAD,EAAAN,KAAA,EAAAI,mBAAAQ,MAQJC,QAAAA,QAAAC,QAAA,KARI,KAAA,EAAA,OAQJX,EARIG,EAAAS,KAAAT,EAAAN,KAAA,GAAAI,mBAAAQ,MAMAC,QAAAA,QAAAG,KAAAf,EAAAN,SAAAQ,IANA,KAAA,GAAA,OAMAF,EAAAN,SANAW,EAAAS,KAAAT,EAAAK,OAAA,SAUVX,KAVU,KAAA,GAAA,OAAAM,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,MAAA,GAAAA,EAAAK,OAAA,SAxBbX,EAAAM,EAAAW,KAwBa,KAAA,GAAA,IAAA,MAAA,OAAAX,EAAAY,SAAA,KAAAV,KAAA,CAAA,CAAA,EAAA,QAWS,IAAAW,KAAAnC,UAAAA,QAAAoC,MAAA,OAAArC,qBAAAoC","file":"User.min.js","sourcesContent":["import mongoose from \"mongoose\";\r\nimport bcrypt from \"bcrypt\"\r\nconst userSchema = new mongoose.Schema({\r\n  username: {\r\n    type: String,\r\n  },\r\n  age: {\r\n    type: String,\r\n  },\r\n  gender: {\r\n    type: String,\r\n    enum: ['male', 'female', 'other'],\r\n  },\r\n  email: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  password: {\r\n    type: String,\r\n  },\r\n  avatar: {\r\n    type: String,\r\n    default: 'https://via.placeholder.com/150'\r\n  },\r\n  bio: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  followers: [{ \r\n    type: mongoose.Schema.Types.ObjectId,\r\n    ref: 'User' \r\n  }],\r\n  following: [{ \r\n    type: mongoose.Schema.Types.ObjectId, \r\n    ref: 'User' \r\n  }],\r\n}, { timestamps: true });\r\nuserSchema.pre('save',async function (next) {\r\n    const user = this;\r\n    if (user.isModified('password')) {\r\n        if (!user.password || user.password.length < 6) {\r\n          const err = new Error('Mật khẩu phải có ít nhất 6 ký tự');\r\n          return next(err);\r\n        }\r\n        try {\r\n          const salt = await bcrypt.genSalt(10);\r\n          user.password = await bcrypt.hash(user.password, salt);\r\n          return next();\r\n        } catch (err) {\r\n          return next(err);\r\n        }\r\n    }\r\n})\r\nconst User = mongoose.model('User', userSchema)\r\nexport default User"]}