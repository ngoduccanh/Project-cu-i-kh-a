{"version":3,"sources":["PostController.js"],"names":["PostController","createPost","req","res","body","image","caption","status","json","error","newPost","Post","author","user","_id","likes","comments","save","message","post","getAllPosts","find","populate","path","select","sort","createdAt","posts","getUserPosts","userId","params","createComment","postId","text","comment","Comment","findById","push"],"mappings":"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","sourcesContent":["import Post from \"../Model/Post.js\"\r\nimport Comment from \"../Model/Comment.js\"\r\n const PostController = {\r\n     createPost: async (req, res) => {\r\n        const { image, caption } = req.body;\r\n        if (!caption) return res.status(400).json({ error: 'Image bắt buộc' });\r\n      \r\n        try {\r\n          const newPost = new Post({\r\n            author: req.user._id,\r\n            image,\r\n            caption,\r\n            likes: [],\r\n            comments: []\r\n          });\r\n          await newPost.save();\r\n          res.status(201).json({ message: 'Tạo post thành công', post: newPost });\r\n        } catch (err) {\r\n          res.status(500).json({ error: 'Lỗi khi tạo post' });\r\n        }\r\n      },\r\n      getAllPosts: async (req, res) => {\r\n        try {\r\n          const posts = await Post.find()\r\n            .populate('author', 'username avatar')\r\n            .populate({\r\n              path: 'comments',\r\n              populate: { path: 'author', select: 'username avatar' }\r\n            })\r\n            .sort({ createdAt: -1 });\r\n      \r\n          res.json(posts);\r\n        } catch (err) {\r\n          res.status(500).json({ error: 'Lỗi khi lấy posts' });\r\n        }\r\n      },\r\n    getUserPosts: async (req, res) => {\r\n        const userId = req.params.userId;\r\n        try {\r\n              const posts = await Post.find({ author: userId })\r\n            .populate('author', 'username avatar')\r\n            .populate({\r\n                path: 'comments',\r\n                populate: { path: 'author', select: 'username avatar' }\r\n            })\r\n            .sort({ createdAt: -1 });\r\n            res.json(posts);\r\n        } catch (err) {\r\n            res.status(500).json({ error: 'Lỗi khi lấy posts của user' });\r\n        }\r\n        },\r\n    createComment : async (req, res) => {\r\n            const { postId, text } = req.body;\r\n            if (!text) return res.status(400).json({ error: 'Text bắt buộc' });\r\n            try {\r\n              const comment = new Comment({\r\n                post: postId,\r\n                author: req.user._id,\r\n                text\r\n              });\r\n              await comment.save();\r\n              const post = await Post.findById(postId);\r\n              post.comments.push(comment._id);\r\n              await post.save();\r\n              res.status(201).json({ message: 'Tạo comment thành công', comment });\r\n            } catch (err) {\r\n              res.status(500).json({ error: 'Lỗi khi tạo comment' });\r\n            }\r\n          },\r\n    \r\n }\r\n export default PostController"],"file":"PostController.dev.js"}