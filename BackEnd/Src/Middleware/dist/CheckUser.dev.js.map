{"version":3,"sources":["CheckUser.js"],"names":["CheckUser","req","res","next","authHeader","headers","authorization","status","json","message","tokenParts","split","length","error","apiKey","apiKeyParts","userId","User","findById","user","console"],"mappings":";;;;;;;AAAA;;;;AACA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,UAAAA,UADQ,GACKH,GAAG,CAACI,OAAJ,CAAYC,aADjB;;AAAA,cAETF,UAFS;AAAA;AAAA;AAAA;;AAAA,2CAGLF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAArB,CAHK;;AAAA;AAKRC,UAAAA,UALQ,GAKKN,UAAU,CAACO,KAAX,CAAiB,GAAjB,CALL;;AAAA,gBAMVD,UAAU,CAACE,MAAX,KAAsB,CAAtB,IAA2BF,UAAU,CAAC,CAAD,CAAV,KAAkB,QANnC;AAAA;AAAA;AAAA;;AAAA,2CAOLR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEK,YAAAA,KAAK,EAAE;AAAT,WAArB,CAPK;;AAAA;AASRC,UAAAA,MATQ,GASCJ,UAAU,CAAC,CAAD,CATX;AAURK,UAAAA,WAVQ,GAUMD,MAAM,CAACH,KAAP,CAAa,GAAb,CAVN;;AAAA,gBAWVI,WAAW,CAACH,MAAZ,KAAuB,CAAvB,IAA4BG,WAAW,CAAC,CAAD,CAAX,KAAmB,MAXrC;AAAA;AAAA;AAAA;;AAAA,2CAYLb,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEK,YAAAA,KAAK,EAAE;AAAT,WAArB,CAZK;;AAAA;AAcRG,UAAAA,MAdQ,GAcCD,WAAW,CAAC,CAAD,CAdZ;AAAA;AAAA;AAAA,0CAgBOE,iBAAKC,QAAL,CAAcF,MAAd,CAhBP;;AAAA;AAgBNG,UAAAA,IAhBM;;AAAA,cAiBPA,IAjBO;AAAA;AAAA;AAAA;;AAAA,2CAkBHjB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEK,YAAAA,KAAK,EAAE;AAAT,WAArB,CAlBG;;AAAA;AAoBZZ,UAAAA,GAAG,CAACkB,IAAJ,GAAWA,IAAX;AACAhB,UAAAA,IAAI;AArBQ;AAAA;;AAAA;AAAA;AAAA;AAuBZiB,UAAAA,OAAO,CAACP,KAAR;AAvBY,2CAwBLX,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEK,YAAAA,KAAK,EAAE;AAAT,WAArB,CAxBK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;eA4BiBb,S","sourcesContent":["import User from \"../Model/User.js\"\r\nconst CheckUser = async (req, res, next) => {\r\n    const authHeader = req.headers.authorization;\r\n    if (!authHeader) {\r\n      return res.status(401).json({ message: \"Tài khoản chưa được cung cấp\" });\r\n    }\r\n    const tokenParts = authHeader.split(' ');\r\n    if (tokenParts.length !== 2 || tokenParts[0] !== 'Bearer') {\r\n      return res.status(401).json({ error: 'apiKey không đúng định dạng' });\r\n    }\r\n    const apiKey = tokenParts[1];\r\n    const apiKeyParts = apiKey.split('-');\r\n    if (apiKeyParts.length !== 4 || apiKeyParts[0] !== 'mern') {\r\n      return res.status(401).json({ error: 'apiKey không đúng định dạng' });\r\n    }\r\n    const userId = apiKeyParts[1];\r\n    try {\r\n      const user = await User.findById(userId);\r\n      if (!user) {\r\n        return res.status(401).json({ error: 'apiKey không hợp lệ hoặc user không tồn tại' });\r\n      }\r\n      req.user = user;\r\n      next();\r\n    } catch (err) {\r\n      console.error(err);\r\n      return res.status(500).json({ error: 'Lỗi hệ thống khi xác thực apiKey' });\r\n    }\r\n  };\r\n  \r\n  export default CheckUser;\r\n  "],"file":"CheckUser.dev.js"}